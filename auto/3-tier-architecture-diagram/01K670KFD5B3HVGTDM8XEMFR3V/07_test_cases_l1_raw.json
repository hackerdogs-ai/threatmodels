{
  "test_cases": [
    {
      "id": "01K670NGM0TESTCASE00000001",
      "name": "Session Hijacking Mitigation Test",
      "description": "Verify that session cookies are protected and cannot be captured or reused by an attacker.",
      "feature": null,
      "scenario": "Capture network traffic between client and ELB using a packet sniffer and attempt to replay the session cookie to access a protected resource.",
      "given": [],
      "when": [],
      "then": [],
      "threat_ids": "{'01K670NGM0VW07WHCB1231ZC36'}",
      "mitigation_ids": "set()",
      "status": "not_tested",
      "last_tested_date": null,
      "test_result": "",
      "automated": false,
      "automation_id": null,
      "test_type": null,
      "test_category": null,
      "prerequisites": [],
      "test_steps": [],
      "expected_result": null,
      "success_criteria": [],
      "tools_required": [],
      "effort": null,
      "priority": null,
      "risk_level": null,
      "test_environment": null,
      "data_requirements": [],
      "access_requirements": [],
      "validation_methods": [],
      "success_metrics": [],
      "failure_scenarios": [],
      "remediation_guidance": null,
      "compliance_requirements": [],
      "automation_potential": null,
      "continuous_monitoring": null,
      "performance_impact": null,
      "scalability_considerations": null,
      "integration_requirements": [],
      "vendor_considerations": []
    },
    {
      "id": "01K670NGM0TESTCASE00000002",
      "name": "TLS Everywhere Enforcement Test",
      "description": "Ensure all endpoints enforce HTTPS and redirect HTTP traffic.",
      "feature": null,
      "scenario": "Send an HTTP request to the ELB and verify that the response redirects to HTTPS and that the TLS certificate is valid.",
      "given": [],
      "when": [],
      "then": [],
      "threat_ids": "{'01K670NGM1XM4JSJTK6F78VYZZ'}",
      "mitigation_ids": "set()",
      "status": "not_tested",
      "last_tested_date": null,
      "test_result": "",
      "automated": false,
      "automation_id": null,
      "test_type": null,
      "test_category": null,
      "prerequisites": [],
      "test_steps": [],
      "expected_result": null,
      "success_criteria": [],
      "tools_required": [],
      "effort": null,
      "priority": null,
      "risk_level": null,
      "test_environment": null,
      "data_requirements": [],
      "access_requirements": [],
      "validation_methods": [],
      "success_metrics": [],
      "failure_scenarios": [],
      "remediation_guidance": null,
      "compliance_requirements": [],
      "automation_potential": null,
      "continuous_monitoring": null,
      "performance_impact": null,
      "scalability_considerations": null,
      "integration_requirements": [],
      "vendor_considerations": []
    },
    {
      "id": "01K670NGM0TESTCASE00000003",
      "name": "Data at Rest Encryption Test",
      "description": "Confirm that RDS instances and snapshots are encrypted.",
      "feature": null,
      "scenario": "Query the RDS instance properties via the AWS CLI and check the `StorageEncrypted` flag; attempt to download a snapshot without encryption and verify failure.",
      "given": [],
      "when": [],
      "then": [],
      "threat_ids": "{'01K670NGM1K92MX72J4RXCT1PQ'}",
      "mitigation_ids": "set()",
      "status": "not_tested",
      "last_tested_date": null,
      "test_result": "",
      "automated": false,
      "automation_id": null,
      "test_type": null,
      "test_category": null,
      "prerequisites": [],
      "test_steps": [],
      "expected_result": null,
      "success_criteria": [],
      "tools_required": [],
      "effort": null,
      "priority": null,
      "risk_level": null,
      "test_environment": null,
      "data_requirements": [],
      "access_requirements": [],
      "validation_methods": [],
      "success_metrics": [],
      "failure_scenarios": [],
      "remediation_guidance": null,
      "compliance_requirements": [],
      "automation_potential": null,
      "continuous_monitoring": null,
      "performance_impact": null,
      "scalability_considerations": null,
      "integration_requirements": [],
      "vendor_considerations": []
    },
    {
      "id": "01K670NGM0TESTCASE00000004",
      "name": "DDoS Mitigation Test",
      "description": "Validate that AWS Shield/WAF rate limiting protects the ELB from high\u2011volume traffic.",
      "feature": null,
      "scenario": "Generate a burst of requests to the ELB using a load\u2011testing tool and monitor the ELB metrics for throttling or WAF rule hits.",
      "given": [],
      "when": [],
      "then": [],
      "threat_ids": "{'01K670NGM1WETMZGVZKDDQP95X'}",
      "mitigation_ids": "set()",
      "status": "not_tested",
      "last_tested_date": null,
      "test_result": "",
      "automated": false,
      "automation_id": null,
      "test_type": null,
      "test_category": null,
      "prerequisites": [],
      "test_steps": [],
      "expected_result": null,
      "success_criteria": [],
      "tools_required": [],
      "effort": null,
      "priority": null,
      "risk_level": null,
      "test_environment": null,
      "data_requirements": [],
      "access_requirements": [],
      "validation_methods": [],
      "success_metrics": [],
      "failure_scenarios": [],
      "remediation_guidance": null,
      "compliance_requirements": [],
      "automation_potential": null,
      "continuous_monitoring": null,
      "performance_impact": null,
      "scalability_considerations": null,
      "integration_requirements": [],
      "vendor_considerations": []
    },
    {
      "id": "01K670NGM0TESTCASE00000005",
      "name": "IAM Least Privilege Test",
      "description": "Verify that instance profile credentials cannot list S3 buckets they should not access.",
      "feature": null,
      "scenario": "Run `aws s3 ls` from an EC2 instance using its IAM role and confirm that access is denied for unauthorized buckets.",
      "given": [],
      "when": [],
      "then": [],
      "threat_ids": "{'01K670NGM1DZ95ZSPBDPT490CN'}",
      "mitigation_ids": "set()",
      "status": "not_tested",
      "last_tested_date": null,
      "test_result": "",
      "automated": false,
      "automation_id": null,
      "test_type": null,
      "test_category": null,
      "prerequisites": [],
      "test_steps": [],
      "expected_result": null,
      "success_criteria": [],
      "tools_required": [],
      "effort": null,
      "priority": null,
      "risk_level": null,
      "test_environment": null,
      "data_requirements": [],
      "access_requirements": [],
      "validation_methods": [],
      "success_metrics": [],
      "failure_scenarios": [],
      "remediation_guidance": null,
      "compliance_requirements": [],
      "automation_potential": null,
      "continuous_monitoring": null,
      "performance_impact": null,
      "scalability_considerations": null,
      "integration_requirements": [],
      "vendor_considerations": []
    },
    {
      "id": "01K670NGM0TESTCASE00000006",
      "name": "SQL Injection Test",
      "description": "Check that user input is properly sanitized to prevent SQL injection.",
      "feature": null,
      "scenario": "Submit a payload containing SQL code to an input field and observe whether the application returns a database error or leaks data.",
      "given": [],
      "when": [],
      "then": [],
      "threat_ids": "{'01K670NGM1PC8Y7KS45TZ92Y8M'}",
      "mitigation_ids": "set()",
      "status": "not_tested",
      "last_tested_date": null,
      "test_result": "",
      "automated": false,
      "automation_id": null,
      "test_type": null,
      "test_category": null,
      "prerequisites": [],
      "test_steps": [],
      "expected_result": null,
      "success_criteria": [],
      "tools_required": [],
      "effort": null,
      "priority": null,
      "risk_level": null,
      "test_environment": null,
      "data_requirements": [],
      "access_requirements": [],
      "validation_methods": [],
      "success_metrics": [],
      "failure_scenarios": [],
      "remediation_guidance": null,
      "compliance_requirements": [],
      "automation_potential": null,
      "continuous_monitoring": null,
      "performance_impact": null,
      "scalability_considerations": null,
      "integration_requirements": [],
      "vendor_considerations": []
    },
    {
      "id": "01K670NGM0TESTCASE00000007",
      "name": "Cross\u2011Site Scripting (XSS) Test",
      "description": "Validate that dynamic output is encoded and CSP is enforced.",
      "feature": null,
      "scenario": "Inject a script tag into a form field and verify that it is not executed in the browser and that a CSP header is present.",
      "given": [],
      "when": [],
      "then": [],
      "threat_ids": "{'01K670NGM12AH8RGCGS0PYA2Z4'}",
      "mitigation_ids": "set()",
      "status": "not_tested",
      "last_tested_date": null,
      "test_result": "",
      "automated": false,
      "automation_id": null,
      "test_type": null,
      "test_category": null,
      "prerequisites": [],
      "test_steps": [],
      "expected_result": null,
      "success_criteria": [],
      "tools_required": [],
      "effort": null,
      "priority": null,
      "risk_level": null,
      "test_environment": null,
      "data_requirements": [],
      "access_requirements": [],
      "validation_methods": [],
      "success_metrics": [],
      "failure_scenarios": [],
      "remediation_guidance": null,
      "compliance_requirements": [],
      "automation_potential": null,
      "continuous_monitoring": null,
      "performance_impact": null,
      "scalability_considerations": null,
      "integration_requirements": [],
      "vendor_considerations": []
    }
  ],
  "test_strategy": null,
  "test_prioritization": null,
  "enterprise_testing_framework": null,
  "summary": null
}