C4Context
    title Architecture Analysis - System Context
    System(Amazon_Route_53, "Amazon Route 53 | [AWS Route 53] | Auth: none | 🔒 | ⚠️", "DNS service that routes user requests to appropriate resources.")
    System(Elastic_Load_Balancer__ELB_, "Elastic Load Balancer (ELB) | [AWS ELB] | Auth: none | 🔒 | ⚠️", "Distributes incoming application traffic across multiple targets.")
    System(Auto_Scaling_Group, "Auto Scaling Group | [AWS Auto Scaling] | Auth: none | 🔒 | ⚠️", "Automatically adjusts the number of web and app servers based on demand.")
    System(Web_Servers, "Web Servers | [Apache, Nginx, Node.js] | Auth: JWT, OAuth | 🔒 | ⚠️", "Handles incoming HTTP requests and serves web content.")
    System(App_Servers, "App Servers | [Java, Python, Ruby] | Auth: JWT, OAuth | 🔒 | ⚠️", "Processes application logic and interacts with databases.")
    System(Elastic_Cache_Tier, "Elastic Cache Tier | [Redis, Memcached] | Auth: none | 🔒 | ⚠️", "Provides in-memory caching to speed up data retrieval.")
    SystemDb(Amazon_RDS, "Amazon RDS | [AWS RDS, PostgreSQL, MySQL] | Auth: IAM database authentication | 🔒 | ⚠️", "Relational Database Service for structured data storage.")
    System(Amazon_S3, "Amazon S3 | [AWS S3] | Auth: AWS IAM | 🔒 | ⚠️", "Object storage service used for storing static data.")
    System(Amazon_CloudFront, "Amazon CloudFront | [AWS CloudFront] | Auth: none | 🔒 | ⚠️", "Content delivery network (CDN) that caches content at edge locations.")
    System(Amazon_SNS, "Amazon SNS | [AWS SNS] | Auth: AWS IAM | 🔒 | ⚠️", "Simple Notification Service for sending notifications.")
    System(Amazon_SES, "Amazon SES | [AWS SES] | Auth: AWS IAM | 🔒 | ⚠️", "Simple Email Service for sending emails.")
    System(User, "User", "Auto-created component: User")
    System(Elastic_Load_Balancer, "Elastic Load Balancer", "Auto-created component: Elastic Load Balancer")

    Rel(User, Amazon_Route_53, "UDP/TCP | DNS queries | ⚠️")
    Rel(Amazon_Route_53, Elastic_Load_Balancer, "TCP | HTTP/HTTPS requests | 🔒 | ⚠️")
    Rel(Elastic_Load_Balancer, Web_Servers, "TCP | HTTP/HTTPS requests | 🔒 | ⚠️")