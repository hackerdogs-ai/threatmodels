C4Context
    title Architecture Analysis - System Context
    System(Amazon_Route_53, "Amazon Route 53 | [AWS Route 53] | Auth: None | 🔒 | ⚠️", "DNS service that directs traffic to the application.")
    System(Elastic_Load_Balancer, "Elastic Load Balancer | [AWS ELB] | Auth: None | 🔒 | ⚠️", "Distributes incoming traffic across multiple web servers.")
    System(Web_Servers, "Web Servers | [EC2, Apache/Nginx] | Auth: Session tokens, OAuth | 🔒 | ⚠️", "Handle incoming HTTP requests and serve web content.")
    System(Auto_Scaling_Group, "Auto Scaling Group | [AWS Auto Scaling] | Auth: None | 🔒 | ⚠️", "Automatically adjusts the number of web servers based on traffic demand.")
    System(App_Servers, "App Servers | [EC2, Node.js/Python] | Auth: API keys, JWT | 🔒 | ⚠️", "Process business logic and interact with databases.")
    System(Elastic_Cache_Tier, "Elastic Cache Tier | [Amazon ElastiCache] | Auth: None | 🔒 | ⚠️", "Caches frequently accessed data to improve performance.")
    SystemDb(Amazon_RDS, "Amazon RDS | [Amazon RDS, MySQL/PostgreSQL] | Auth: Database credentials | 🔒 | ⚠️", "Relational database service for structured data storage.")
    System(Amazon_S3_Bucket, "Amazon S3 Bucket | [Amazon S3] | Auth: AWS credentials | 🔒 | ⚠️", "Stores static assets such as images and videos.")
    System(Amazon_CloudFront, "Amazon CloudFront | [Amazon CloudFront] | Auth: None | 🔒 | ⚠️", "Content Delivery Network (CDN) that caches and delivers static content.")
    System(Amazon_SNS_Notifications, "Amazon SNS Notifications | [Amazon SNS] | Auth: AWS credentials | 🔒 | ⚠️", "Sends alerts and notifications based on system events.")
    System(Amazon_SES_Email, "Amazon SES Email | [Amazon SES] | Auth: AWS credentials | 🔒 | ⚠️", "Manages email sending for application notifications.")
    System(User, "User", "Auto-created component: User")

    Rel(User, Elastic_Load_Balancer, "HTTPS | HTTP Requests | Auth: required | 🔒 | ⚠️")
    Rel(Elastic_Load_Balancer, Web_Servers, "HTTP | HTTP Requests | ⚠️")
    Rel(Web_Servers, App_Servers, "HTTP | Business Logic Requests | Auth: required | ⚠️")